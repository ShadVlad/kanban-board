[{"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\index.js":"1","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\App.js":"2","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\reportWebVitals.js":"3","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Header\\Header.jsx":"4","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Header\\header.jsx":"5","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\User\\user.jsx":"6","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Footer\\footer.jsx":"7","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Board\\board.jsx":"8","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Tasks\\tasks.jsx":"9","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Input\\input.jsx":"10","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Button\\button.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":670,"mtime":1609863188377,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":645,"mtime":1609767653986,"results":"16","hashOfConfig":"17"},{"size":645,"mtime":1609767653986,"results":"18","hashOfConfig":"13"},{"size":978,"mtime":1609770897505,"results":"19","hashOfConfig":"13"},{"size":931,"mtime":1609933568132,"results":"20","hashOfConfig":"13"},{"size":7794,"mtime":1611424822571,"results":"21","hashOfConfig":"13"},{"size":745,"mtime":1609957348568,"results":"22","hashOfConfig":"13"},{"size":884,"mtime":1609947535172,"results":"23","hashOfConfig":"13"},{"size":549,"mtime":1609931809050,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"160lssj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i0kini",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\index.js",[],["51","52"],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\App.js",["53"],"//import logo from \"./logo.svg\";\nimport { useState } from \"react\";\nimport Header from \"./components/Header/header\";\nimport Footer from \"./components/Footer/footer\";\nimport Board from \"./components/Board/board\";\nimport \"./App.css\";\n\nfunction App() {\n  const localStorageData = localStorage.getItem(\"tasks\");\n  const [tasks, setData] = useState(\n    localStorageData ? JSON.parse(localStorageData) : \"\"\n  );\n  const updateData = (newData) => {\n    localStorage.setItem(\"tasks\", JSON.stringify(newData));\n    setData(newData);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board />\n      <Footer tasks={tasks} />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\reportWebVitals.js",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Header\\Header.jsx",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Header\\header.jsx",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\User\\user.jsx",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Footer\\footer.jsx",["54","55"],"import React from \"react\";\r\nimport \"./footer.css\";\r\nimport logo from \"./logo.svg\";\r\n\r\nfunction f(tasks) {\r\n  return Array.from(tasks);\r\n}\r\n\r\nfunction Count(tasks, step) {\r\n  let item;\r\n  for (let [key, value] of Object.entries(tasks)) {\r\n    item = value;\r\n  }\r\n  let counter = 0;\r\n  if (item) {\r\n    counter = item.filter((stage) => stage.status === step).length;\r\n  }\r\n  return counter;\r\n}\r\n\r\nfunction Footer(tasks) {\r\n  console.log(tasks);\r\n  return (\r\n    <section className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"footer__counterblock\">\r\n          <div>Active tasks: {Count(tasks, 0)}</div>\r\n          <div>Finished tasks: {Count(tasks, 3)}</div>\r\n        </div>\r\n\r\n        <div className=\"footer__copyright\">\r\n          Kanban board by SVlad, 2020\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Footer;\r\n","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Board\\board.jsx",["56"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Tasks from \"../Tasks/tasks\";\r\nimport Input from \"../Input/input\";\r\nimport Button from \"../Button/button\";\r\n//import Footer from \"../Footer/footer\";\r\n\r\nimport \"./board.css\";\r\n\r\nconst tableSteps = [\r\n  {\r\n    id: 0,\r\n    title: \"Backlog\",\r\n    inputActivity: false,\r\n    btnName: \"+ Add card\",\r\n    link: \"/backlog\",\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Ready\",\r\n    inputActivity: false,\r\n    btnName: \"+ Add card\",\r\n    link: \"/ready\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"In progress\",\r\n    inputActivity: false,\r\n    btnName: \"+ Add card\",\r\n    link: \"/inprogress\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Finished\",\r\n    inputActivity: false,\r\n    btnName: \"+ Add card\",\r\n    link: \"/finished\",\r\n  },\r\n];\r\n\r\n//функция отбора значений для блока задач\r\nfunction SelectedTasks(list, step) {\r\n  const newlist = list.filter((stage) => stage.status === step);\r\n  return newlist;\r\n}\r\n//Подсчет элементов массива по статусу задачи\r\nfunction Count(list, step) {\r\n  const counter = list.filter((stage) => stage.status === step).length;\r\n  return counter;\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tasks: [],\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedtasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (savedtasks) {\r\n      this.setState({\r\n        tasks: savedtasks,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const saveTasks = JSON.stringify(this.state.tasks);\r\n    localStorage.setItem(\"tasks\", saveTasks);\r\n  }\r\n\r\n  onClickBtn = (type) => {\r\n    if (type === 0 && tableSteps[type].inputActivity === false) {\r\n      tableSteps[type].inputActivity = true;\r\n      tableSteps[type].btnName = \"Submit\";\r\n      this.setState({});\r\n    } else if (type === 0 && tableSteps[type].inputActivity === true) {\r\n      this.state.tasks.push({\r\n        id: this.state.tasks.length,\r\n        createdAt: new Date().toDateString(),\r\n        title: this.state.value,\r\n        text:\r\n          \"Это был темный лес, издали казавшийся непроходимым. Там Пахапиль охотился, глушил рыбу, спал на еловых ветках. Короче – жил, пока русские не выгнали оккупантов. А когда немцы ушли, Пахапиль вернулся. Он появился в Раквере, где советский капитан наградил его медалью. Медаль была украшена четырьмя непонятными словами, фигурой и восклицательным знаком.\",\r\n        status: 0,\r\n      });\r\n      tableSteps[0].inputActivity = false;\r\n      tableSteps[type].btnName = \"+ Add card\";\r\n      this.setState({\r\n        value: null,\r\n      });\r\n    } else if (type > 0 && tableSteps[type].inputActivity === false) {\r\n      tableSteps[type].inputActivity = true;\r\n      this.setState({});\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  onChangeSelect = (event) => {\r\n    let newtasks = this.state.tasks;\r\n    newtasks[event.target.value].status++;\r\n    tableSteps[\r\n      this.state.tasks[event.target.value].status\r\n    ].inputActivity = false;\r\n    this.setState({\r\n      tasks: newtasks,\r\n    });\r\n  };\r\n  onChangeInput = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/backlog\">\r\n              <section className=\"list\">\r\n                <div className=\"list__header\">\r\n                  <div className=\"block_title inactive\">\r\n                    {tableSteps[0].title}\r\n                  </div>\r\n                  <Link to=\"/\" className=\"list__close-sign\"></Link>\r\n                </div>\r\n                <div className=\"list__content\">\r\n                  <Tasks\r\n                    list={SelectedTasks(this.state.tasks, 0)}\r\n                    full={true}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </Route>\r\n            <Route path=\"/ready\">\r\n              <section className=\"list\">\r\n                <div className=\"list__header\">\r\n                  <div className=\"block_title inactive\">\r\n                    {tableSteps[1].title}\r\n                  </div>\r\n                  <Link to=\"/\" className=\"list__close-sign\"></Link>\r\n                </div>\r\n                <div className=\"list__content\">\r\n                  <Tasks\r\n                    list={SelectedTasks(this.state.tasks, 1)}\r\n                    full={true}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </Route>\r\n            <Route path=\"/inprogress\">\r\n              <section className=\"list\">\r\n                <div className=\"list__header\">\r\n                  <div className=\"block_title inactive\">\r\n                    {tableSteps[2].title}\r\n                  </div>\r\n                  <Link to=\"/\" className=\"list__close-sign\"></Link>\r\n                </div>\r\n                <div className=\"list__content\">\r\n                  <Tasks\r\n                    list={SelectedTasks(this.state.tasks, 2)}\r\n                    full={true}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </Route>\r\n            <Route path=\"/finished\">\r\n              <section className=\"list\">\r\n                <div className=\"list__header\">\r\n                  <div className=\"block_title inactive\">\r\n                    {tableSteps[3].title}\r\n                  </div>\r\n                  <Link to=\"/\" className=\"list__close-sign\"></Link>\r\n                </div>\r\n                <div className=\"list__content\">\r\n                  <Tasks\r\n                    list={SelectedTasks(this.state.tasks, 3)}\r\n                    full={true}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <section className=\"table\">\r\n                {tableSteps.map((item) => (\r\n                  <div key={item.id} className=\"block\">\r\n                    <Link className=\"block__title\" to={item.link}>\r\n                      {item.title}\r\n                    </Link>\r\n                    <div className=\"block__content\">\r\n                      <Tasks\r\n                        list={SelectedTasks(this.state.tasks, item.id)}\r\n                        full={false}\r\n                      />\r\n                      <Input\r\n                        activity={item.inputActivity}\r\n                        type={item.id}\r\n                        list={SelectedTasks(this.state.tasks, item.id - 1)}\r\n                        value={this.value}\r\n                        onChange={this.onChangeInput}\r\n                        onSelect={this.onChangeSelect}\r\n                        onBlur={() => this.onClickBtn(2)}\r\n                      />\r\n                    </div>\r\n                    <Button\r\n                      type={item.id}\r\n                      list={SelectedTasks(this.state.tasks, item.id - 1)}\r\n                      name={item.btnName}\r\n                      inputActivity={item.inputActivity}\r\n                      onClick={() => this.onClickBtn(item.id)}\r\n                      value={this.state.value}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </section>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        {/* <Footer\r\n          activeTasks={Count(this.state.tasks, 0)}\r\n          finishedTasks={Count(this.state.tasks, 3)}\r\n        /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Board;\r\n","D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Tasks\\tasks.jsx",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Input\\input.jsx",[],"D:\\SkillFactory\\KANBAN PROJECTS\\kanban-board\\src\\components\\Button\\button.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":13,"column":9,"nodeType":"63","messageId":"64","endLine":13,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":11},{"ruleId":"61","severity":1,"message":"66","line":11,"column":13,"nodeType":"63","messageId":"64","endLine":11,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":47,"column":10,"nodeType":"63","messageId":"64","endLine":47,"endColumn":15},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","'f' is defined but never used.","'key' is assigned a value but never used.","'Count' is defined but never used.","no-global-assign","no-unsafe-negation"]